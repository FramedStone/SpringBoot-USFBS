package com.usfbs.springboot.contracts;

import io.reactivex.Flowable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.StaticStruct;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/LFDT-web3j/web3j/tree/main/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.14.0.
 */
@SuppressWarnings("rawtypes")
public class Booking extends Contract {
    public static final String BINARY = "60e06040523480156200001157600080fd5b50604051620046983803806200469883398101604081905262000034916200006e565b6001600160a01b03918216608081905260a0521660c052620000a6565b80516001600160a01b03811681146200006957600080fd5b919050565b600080604083850312156200008257600080fd5b6200008d8362000051565b91506200009d6020840162000051565b90509250929050565b60805160a05160c05161457162000127600039600061302c015260005050600081816102a4015281816105a7015281816106b401528181610be801528181611039015281816115db0152818161175b015281816117cb015281816119b401528181611bad0152818161268e01528181612cd50152612fea01526145716000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80636d35d76d116100a2578063b3ee93fc11610071578063b3ee93fc1461021d578063b91316dd14610230578063ba2992b814610250578063c2c3fbee14610271578063d27d559f1461028457600080fd5b80636d35d76d146101d15780637af674e1146101e4578063931431ea146101f75780639739ad5f1461020a57600080fd5b80634245f2fe116100de5780634245f2fe1461018157806350651f68146101965780635c60f2261461019e5780636a5c841a146101b157600080fd5b8063048a4d1b146101105780631ed87304146101395780632b6c588d14610159578063421b2d8b1461016e575b600080fd5b61012361011e3660046135cf565b610297565b604051610130919061368c565b60405180910390f35b61014c61014736600461369f565b610418565b60405161013091906136d4565b61016c61016736600461369f565b61059c565b005b61016c61017c366004613710565b6106a9565b61018961074f565b6040516101309190613825565b610189610bdb565b61016c6101ac366004613710565b61102e565b6101c46101bf366004613887565b6111b5565b60405161013091906138a0565b61016c6101df3660046135cf565b6115d0565b6101c46101f2366004613887565b611748565b61016c6102053660046138b3565b6117c0565b61016c610218366004613901565b6119a9565b61016c61022b3660046138b3565b611ba2565b61024361023e366004613901565b611da4565b6040516101309190613965565b61026361025e3660046139bc565b612040565b604051908152602001610130565b61026361027f3660046139bc565b612681565b61016c610292366004613a9a565b61287d565b6060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102ea5760405162461bcd60e51b81526004016102e190613ad7565b60405180910390fd5b6102f2612a31565b836000036103125760405162461bcd60e51b81526004016102e190613afe565b825160000361035b5760405162461bcd60e51b815260206004820152601560248201527412541194d2185cda081b9bdd081c1c9bdd9a591959605a1b60448201526064016102e1565b6103658484612cca565b60006002858154811061037a5761037a613b29565b90600052602060002090600902019050336001600160a01b031660008051602061451c833981519152866103be8460080160009054906101000a900460ff16612e1d565b6103c86002612e1d565b876040516020016103d99190613b3f565b60408051601f19818403018152908290526103f8949392914290613b84565b60405180910390a2600801805460ff1916600217905550805b9392505050565b61043c60405180606001604052806060815260200160008152602001600081525090565b60008260405161044c9190613bd6565b908152604051908190036020019020805461046690613bf2565b90506000036104875760405162461bcd60e51b81526004016102e190613c2c565b600080836040516104989190613bd6565b90815260200160405180910390206040518060600160405290816000820180546104c190613bf2565b80601f01602080910402602001604051908101604052809291908181526020018280546104ed90613bf2565b801561053a5780601f1061050f5761010080835404028352916020019161053a565b820191906000526020600020905b81548152906001019060200180831161051d57829003601f168201915b5050509183525050600182015460208201526002909101546040918201528151905191925033917fcd89f8003d5c5810477a5f9f6a603ee6803e738898ae8928844766c87efbbf6d9161058e914290613c5c565b60405180910390a292915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105e45760405162461bcd60e51b81526004016102e190613ad7565b6000816040516105f49190613bd6565b908152604051908190036020019020805461060e90613bf2565b905060000361062f5760405162461bcd60e51b81526004016102e190613c2c565b60008160405161063f9190613bd6565b908152604051908190036020019020600061065a8282613448565b5060006001820181905560029091015560405133907f7e5f432f0a4cebe76f981268147421b4fe4d869322e486ddcf97817cf0bf608d9061069e9084904290613c5c565b60405180910390a250565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106f15760405162461bcd60e51b81526004016102e190613ad7565b6001600160a01b038116600081815260016020818152604092839020805460ff1916909217909155905142815233917f8af55b0f4d8e2cbaeef69c06f910b016a57b3807c1f854de7ec4881ed83b3d7c91015b60405180910390a350565b3360009081526001602081905260409091205460609160ff9091161515146107895760405162461bcd60e51b81526004016102e190613ad7565b610791612a31565b6002546107eb5760405162461bcd60e51b815260206004820152602260248201527f456d70747920626f6f6b696e677320666f756e6420696e20626c6f636b63686160448201526134b760f11b60648201526084016102e1565b606060005b600254811015610bd557336001600160a01b03166002828154811061081757610817613b29565b60009182526020909120600990910201546001600160a01b031603610bc3576002818154811061084957610849613b29565b9060005260206000209060090201604051806101000160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600182015481526020016002820180546108ac90613bf2565b80601f01602080910402602001604051908101604052809291908181526020018280546108d890613bf2565b80156109255780601f106108fa57610100808354040283529160200191610925565b820191906000526020600020905b81548152906001019060200180831161090857829003601f168201915b5050505050815260200160038201805461093e90613bf2565b80601f016020809104026020016040519081016040528092919081815260200182805461096a90613bf2565b80156109b75780601f1061098c576101008083540402835291602001916109b7565b820191906000526020600020905b81548152906001019060200180831161099a57829003601f168201915b505050505081526020016004820180546109d090613bf2565b80601f01602080910402602001604051908101604052809291908181526020018280546109fc90613bf2565b8015610a495780601f10610a1e57610100808354040283529160200191610a49565b820191906000526020600020905b815481529060010190602001808311610a2c57829003601f168201915b50505050508152602001600582018054610a6290613bf2565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8e90613bf2565b8015610adb5780601f10610ab057610100808354040283529160200191610adb565b820191906000526020600020905b815481529060010190602001808311610abe57829003601f168201915b5050509183525050604080518082018252600684015481526007840154602082810191909152830152600883015491019060ff166004811115610b2057610b20613739565b6004811115610b3157610b31613739565b81525050828281518110610b4757610b47613b29565b6020026020010181905250336001600160a01b03167f64df44eecc1bed90d6a3864b17823ab230cf5ee70bb412a3f7e526b1901b252760028381548110610b9057610b90613b29565b90600052602060002090600902016001015442604051610bba929190918252602082015260400190565b60405180910390a25b80610bcd81613c94565b9150506107f0565b50905090565b6060336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c255760405162461bcd60e51b81526004016102e190613ad7565b610c2d612a31565b600254610c875760405162461bcd60e51b815260206004820152602260248201527f456d70747920626f6f6b696e677320736176656420696e20626c6f636b63686160448201526134b760f11b60648201526084016102e1565b60005b600254811015610d1657336001600160a01b03167f64df44eecc1bed90d6a3864b17823ab230cf5ee70bb412a3f7e526b1901b252760028381548110610cd257610cd2613b29565b90600052602060002090600902016001015442604051610cfc929190918252602082015260400190565b60405180910390a280610d0e81613c94565b915050610c8a565b506002805480602002602001604051908101604052809291908181526020016000905b8282101561102557600084815260209081902060408051610100810182526009860290920180546001600160a01b0316835260018101549383019390935260028301805492939291840191610d8d90613bf2565b80601f0160208091040260200160405190810160405280929190818152602001828054610db990613bf2565b8015610e065780601f10610ddb57610100808354040283529160200191610e06565b820191906000526020600020905b815481529060010190602001808311610de957829003601f168201915b50505050508152602001600382018054610e1f90613bf2565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4b90613bf2565b8015610e985780601f10610e6d57610100808354040283529160200191610e98565b820191906000526020600020905b815481529060010190602001808311610e7b57829003601f168201915b50505050508152602001600482018054610eb190613bf2565b80601f0160208091040260200160405190810160405280929190818152602001828054610edd90613bf2565b8015610f2a5780601f10610eff57610100808354040283529160200191610f2a565b820191906000526020600020905b815481529060010190602001808311610f0d57829003601f168201915b50505050508152602001600582018054610f4390613bf2565b80601f0160208091040260200160405190810160405280929190818152602001828054610f6f90613bf2565b8015610fbc5780601f10610f9157610100808354040283529160200191610fbc565b820191906000526020600020905b815481529060010190602001808311610f9f57829003601f168201915b5050509183525050604080518082018252600684015481526007840154602082810191909152830152600883015491019060ff16600481111561100157611001613739565b600481111561101257611012613739565b8152505081526020019060010190610d39565b50505050905090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146110765760405162461bcd60e51b81526004016102e190613ad7565b6001600160a01b03811660009081526001602081905260409091205460ff161515146110e45760405162461bcd60e51b815260206004820152601760248201527f55736572206e6f7420666f756e64202873797374656d2900000000000000000060448201526064016102e1565b336001600160a01b038216036111355760405162461bcd60e51b81526020600482015260166024820152754163636573732064656e696564202873797374656d2960501b60448201526064016102e1565b6001600160a01b038116600081815260016020908152604091829020805460ff19169055815182815260149281019290925273557365722072656d6f766564202861646d696e2960601b6060830152429082015233907ffa65fb89220eec84b1ada4d079a06ae008c52f053e2fbfc171d8196e4b9abddd90608001610744565b6111bd613482565b3360009081526001602081905260409091205460ff161515146111f25760405162461bcd60e51b81526004016102e190613ad7565b6111fa612a31565b8160000361121a5760405162461bcd60e51b81526004016102e190613afe565b336001600160a01b03166002838154811061123757611237613b29565b60009182526020909120600990910201546001600160a01b0316146112925760405162461bcd60e51b81526020600482015260116024820152702737ba103137b7b5b4b7339037bbb732b960791b60448201526064016102e1565b6040805183815242602082015233917f64df44eecc1bed90d6a3864b17823ab230cf5ee70bb412a3f7e526b1901b2527910160405180910390a2600282815481106112df576112df613b29565b9060005260206000209060090201604051806101000160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820154815260200160028201805461134290613bf2565b80601f016020809104026020016040519081016040528092919081815260200182805461136e90613bf2565b80156113bb5780601f10611390576101008083540402835291602001916113bb565b820191906000526020600020905b81548152906001019060200180831161139e57829003601f168201915b505050505081526020016003820180546113d490613bf2565b80601f016020809104026020016040519081016040528092919081815260200182805461140090613bf2565b801561144d5780601f106114225761010080835404028352916020019161144d565b820191906000526020600020905b81548152906001019060200180831161143057829003601f168201915b5050505050815260200160048201805461146690613bf2565b80601f016020809104026020016040519081016040528092919081815260200182805461149290613bf2565b80156114df5780601f106114b4576101008083540402835291602001916114df565b820191906000526020600020905b8154815290600101906020018083116114c257829003601f168201915b505050505081526020016005820180546114f890613bf2565b80601f016020809104026020016040519081016040528092919081815260200182805461152490613bf2565b80156115715780601f1061154657610100808354040283529160200191611571565b820191906000526020600020905b81548152906001019060200180831161155457829003601f168201915b5050509183525050604080518082018252600684015481526007840154602082810191909152830152600883015491019060ff1660048111156115b6576115b6613739565b60048111156115c7576115c7613739565b90525092915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146116185760405162461bcd60e51b81526004016102e190613ad7565b611620612a31565b826000036116405760405162461bcd60e51b81526004016102e190613afe565b81516000036116895760405162461bcd60e51b815260206004820152601560248201527412541194d2185cda081b9bdd081c1c9bdd9a591959605a1b60448201526064016102e1565b80516000036116ce5760405162461bcd60e51b81526020600482015260116024820152701b9bdd19481b9bdd081c1c9bdd9a591959607a1b60448201526064016102e1565b6116d88383612cca565b6000600284815481106116ed576116ed613b29565b906000526020600020906009020190508181600501908161170e9190613cfc565b50336001600160a01b031660008051602061451c83398151915285844260405161173a93929190613dbc565b60405180910390a250505050565b611750613482565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146117985760405162461bcd60e51b81526004016102e190613ad7565b6117a0612a31565b816000036112925760405162461bcd60e51b81526004016102e190613afe565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146118085760405162461bcd60e51b81526004016102e190613ad7565b6000836040516118189190613bd6565b908152604051908190036020019020805461183290613bf2565b1590506118775760405162461bcd60e51b8152602060048201526013602482015272088eae0d8d2c6c2e8cac840d2e0cce690c2e6d606b1b60448201526064016102e1565b816000036118c05760405162461bcd60e51b81526020600482015260166024820152751cdd185c9d151a5b59481b9bdd081c1c9bdd9a59195960521b60448201526064016102e1565b806000036119075760405162461bcd60e51b8152602060048201526014602482015273195b99151a5b59481b9bdd081c1c9bdd9a59195960621b60448201526064016102e1565b6040518060600160405280848152602001838152602001828152506000846040516119329190613bd6565b9081526040519081900360200190208151819061194f9082613cfc565b50602082015160018201556040918201516002909101555133907f49a4e12bfea796ddfee159f7d8552825d60cea59ab6ea03f43431bfb474b79a39061199c908690869086904290613e21565b60405180910390a2505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146119f15760405162461bcd60e51b81526004016102e190613ad7565b600082604051611a019190613bd6565b9081526040519081900360200190208054611a1b90613bf2565b9050600003611a3c5760405162461bcd60e51b81526004016102e190613c2c565b8051600003611a855760405162461bcd60e51b81526020600482015260156024820152741a5c199cd2185cda081b9bdd081c1c9bdd9a591959605a1b60448201526064016102e1565b6040518060600160405280828152602001600084604051611aa69190613bd6565b9081526020016040518091039020600101548152602001600084604051611acd9190613bd6565b908152602001604051809103902060020154815250600082604051611af29190613bd6565b90815260405190819003602001902081518190611b0f9082613cfc565b506020820151600182015560409182015160029091015551600090611b35908490613bd6565b9081526040519081900360200190206000611b508282613448565b5060006001820181905560029091015560405133907f748e0cf6928a9d4807ef9076c5befa6090e9dd72cc44f78bc0858726e675cf4f90611b9690859085904290613e50565b60405180910390a25050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611bea5760405162461bcd60e51b81526004016102e190613ad7565b600083604051611bfa9190613bd6565b9081526040519081900360200190208054611c1490613bf2565b9050600003611c355760405162461bcd60e51b81526004016102e190613c2c565b81600003611c7e5760405162461bcd60e51b81526020600482015260166024820152751cdd185c9d151a5b59481b9bdd081c1c9bdd9a59195960521b60448201526064016102e1565b80600003611cc55760405162461bcd60e51b8152602060048201526014602482015273195b99151a5b59481b9bdd081c1c9bdd9a59195960621b60448201526064016102e1565b60008084604051611cd69190613bd6565b908152602001604051809103902060010154905060008085604051611cfb9190613bd6565b908152602001604051809103902060020154905083600086604051611d209190613bd6565b90815260200160405180910390206001018190555082600086604051611d469190613bd6565b9081526040519081900360200181206002019190915533907fcf919766b203e7636b2f7d99b6c4fd24957448dd84e095089b465af12fd6c85190611d95908890869086908a908a904290613e86565b60405180910390a25050505050565b6060611dae612a31565b6000835111611dcf5760405162461bcd60e51b81526004016102e190613ec2565b6000825111611df05760405162461bcd60e51b81526004016102e190613ef9565b60025460009067ffffffffffffffff811115611e0e57611e0e613503565b604051908082528060200260200182016040528015611e5357816020015b6040805180820190915260008082526020820152815260200190600190039081611e2c5790505b50905060005b60025481101561203657848051906020012060028281548110611e7e57611e7e613b29565b9060005260206000209060090201600301604051611e9c9190613f30565b6040518091039020148015611eef5750838051906020012060028281548110611ec757611ec7613b29565b9060005260206000209060090201600401604051611ee59190613f30565b6040518091039020145b8015611f795750600060028281548110611f0b57611f0b613b29565b600091825260209091206008600990920201015460ff166004811115611f3357611f33613739565b1480611f795750600160028281548110611f4f57611f4f613b29565b600091825260209091206008600990920201015460ff166004811115611f7757611f77613739565b145b156120245760028181548110611f9157611f91613b29565b906000526020600020906009020160060160405180604001604052908160008201548152602001600182015481525050828281518110611fd357611fd3613b29565b6020026020010181905250336001600160a01b03167f64a77e8e5a89f92fd3d976f866f08544009bc92cc4bdc1793d994c9321a308ad86864260405161201b93929190613e50565b60405180910390a25b8061202e81613c94565b915050611e59565b5090505b92915050565b33600090815260016020819052604082205460ff161515146120745760405162461bcd60e51b81526004016102e190613ad7565b61207c612a31565b600085511161209d5760405162461bcd60e51b81526004016102e190613ec2565b60008451116120be5760405162461bcd60e51b81526004016102e190613ef9565b8151158015906120d15750602082015115155b61211d5760405162461bcd60e51b815260206004820152601e60248201527f5374617274206f7220456e642074696d65206e6f742070726f7669646564000060448201526064016102e1565b8151602083015160009161213091613fa6565b905080610e101480612143575080611c20145b6121a65760405162461bcd60e51b815260206004820152602e60248201527f426f6f6b696e67206d7573742062652065786163746c79203120686f7572206f60448201526d72203220686f757273206f6e6c7960901b60648201526084016102e1565b60025460005b60025481101561223357600281815481106121c9576121c9613b29565b90600052602060002090600902016001015460001480156122185750600281815481106121f8576121f8613b29565b9060005260206000209060090201600201805461221490613bf2565b1590505b15612221578091505b8061222b81613c94565b9150506121ac565b506000604051806101000160405280336001600160a01b031681526020018381526020018a81526020018981526020018881526020018781526020018681526020016001600481111561228857612288613739565b90526002805460018101825560009190915281517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace600990920291820180546001600160a01b0319166001600160a01b0390921691909117815560208301517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf8301556040830151929350839290917f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad001906123449082613cfc565b50606082015160038201906123599082613cfc565b506080820151600482019061236e9082613cfc565b5060a082015160058201906123839082613cfc565b5060c08201518051600683015560200151600782015560e082015160088201805460ff191660018360048111156123bc576123bc613739565b02179055505033600090815260036020908152604091829020845181546001600160a01b0319166001600160a01b039091161781559084015160018201559083015183925060028201906124109082613cfc565b50606082015160038201906124259082613cfc565b506080820151600482019061243a9082613cfc565b5060a0820151600582019061244f9082613cfc565b5060c08201518051600683015560200151600782015560e082015160088201805460ff1916600183600481111561248857612488613739565b02179055509050506001600283815481106124a5576124a5613b29565b60009182526020909120600860099092020101805460ff191660018360048111156124d2576124d2613739565b0217905550336001600160a01b03167fb5b77e81863bdbbd0d5921bd76bc0f42cae6de4468773464734a6d4f0a822cad838b8b8b6125138b60000151612f74565b6125208c60200151612f74565b61252a6001612e1d565b4260405161253f989796959493929190613fb9565b60405180910390a2612552888887612fdd565b156125e15760006002838154811061256c5761256c613b29565b60009182526020909120600860099092020101805460ff1916600183600481111561259957612599613739565b02179055503360008051602061451c833981519152836125b96001612e1d565b6125c36000612e1d565b426040516125d49493929190614086565b60405180910390a2612675565b6125ec888887612fdd565b61267557600280838154811061260457612604613b29565b60009182526020909120600860099092020101805460ff1916600183600481111561263157612631613739565b02179055503360008051602061451c833981519152836126516001612e1d565b61265b6002612e1d565b4260405161266c94939291906140f8565b60405180910390a25b50979650505050505050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146126cb5760405162461bcd60e51b81526004016102e190613ad7565b6126d3612a31565b60008551116126f45760405162461bcd60e51b81526004016102e190613ec2565b60008451116127155760405162461bcd60e51b81526004016102e190613ef9565b8151158015906127285750602082015115155b6127745760405162461bcd60e51b815260206004820152601e60248201527f5374617274206f7220456e642074696d65206e6f742070726f7669646564000060448201526064016102e1565b8151602083015160009161278791613fa6565b9050612795610e1082614196565b156127f05760405162461bcd60e51b815260206004820152602560248201527f4475726174696f6e206d75737420626520696e203120686f757220696e6372656044820152646d656e747360d81b60648201526084016102e1565b60025460005b600254811015612233576002818154811061281357612813613b29565b906000526020600020906009020160010154600014801561286257506002818154811061284257612842613b29565b9060005260206000209060090201600201805461285e90613bf2565b1590505b1561286b578091505b8061287581613c94565b9150506127f6565b3360009081526001602081905260409091205460ff161515146128b25760405162461bcd60e51b81526004016102e190613ad7565b6128ba612a31565b816000036129035760405162461bcd60e51b8152602060048201526016602482015275109bdbdada5b99d259081b9bdd081c1c9bdd9a59195960521b60448201526064016102e1565b336001600160a01b03166002838154811061292057612920613b29565b60009182526020909120600990910201546001600160a01b03161461297b5760405162461bcd60e51b81526020600482015260116024820152702737ba103137b7b5b4b7339037bbb732b960791b60448201526064016102e1565b60006002838154811061299057612990613b29565b6000918252602082206008600990920201908101549092506129b49060ff16612e1d565b90506000836040516020016129c991906141aa565b6040516020818303038152906040526129e26004612e1d565b6040516020016129f39291906141d0565b6040516020818303038152906040529050336001600160a01b031660008051602061451c83398151915286848442604051611d9594939291906141ff565b60005b600254811015612cc757600060028281548110612a5357612a53613b29565b600091825260208220600990910201915060028381548110612a7757612a77613b29565b600091825260209091206008600990920201015460ff166004811115612a9f57612a9f613739565b03612b0f5760078101544210612b0a5760088101805460ff191660031790556001810154339060008051602061451c83398151915290612adf6000612e1d565b6008850154612af09060ff16612e1d565b42604051612b019493929190614271565b60405180910390a25b612cb4565b600460028381548110612b2457612b24613b29565b600091825260209091206008600990920201015460ff166004811115612b4c57612b4c613739565b03612cb4576001810154600882015433917f46a076b997ff518755813dfc98f4404b0b3b6ef5661f4f13e199917c6b01db96916002850190612b909060ff16612e1d565b42604051612ba194939291906142f4565b60405180910390a260028281548110612bbc57612bbc613b29565b60009182526020822060099091020180546001600160a01b03191681556001810182905590612bee6002830182613448565b612bfc600383016000613448565b612c0a600483016000613448565b612c18600583016000613448565b50600060068201819055600782018190556008909101805460ff1916905581546001600160a01b0316815260036020526040812080546001600160a01b03191681556001810182905590612c6f6002830182613448565b612c7d600383016000613448565b612c8b600483016000613448565b612c99600583016000613448565b506000600682018190556007820155600801805460ff191690555b5080612cbf81613c94565b915050612a34565b50565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614612d125760405162461bcd60e51b81526004016102e190613ad7565b600060028381548110612d2757612d27613b29565b90600052602060002090600902016002018054612d4390613bf2565b80601f0160208091040260200160405190810160405280929190818152602001828054612d6f90613bf2565b8015612dbc5780601f10612d9157610100808354040283529160200191612dbc565b820191906000526020600020905b815481529060010190602001808311612d9f57829003601f168201915b505050505090508160028481548110612dd757612dd7613b29565b90600052602060002090600902016002019081612df49190613cfc565b506040518290339060008051602061451c8339815191529061173a9087908690869042906143cb565b60606000826004811115612e3357612e33613739565b03612e5c575050604080518082019091526008815267185c1c1c9bdd995960c21b602082015290565b6001826004811115612e7057612e70613739565b03612e9857505060408051808201909152600781526670656e64696e6760c81b602082015290565b6002826004811115612eac57612eac613739565b03612ed55750506040805180820190915260088152671c995a9958dd195960c21b602082015290565b6003826004811115612ee957612ee9613739565b03612f1357505060408051808201909152600981526818dbdb5c1b195d195960ba1b602082015290565b6004826004811115612f2757612f27613739565b03612f5157505060408051808201909152600981526818d85b98d95b1b195960ba1b602082015290565b50506040805180820190915260078152663ab735b737bbb760c91b602082015290565b60606000612f84610e108461443d565b90506000603c612f96610e1086614196565b612fa0919061443d565b9050612fab826132ff565b612fb4826132ff565b604051602001612fc5929190614451565b60405160208183030381529060405292505050919050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146130275760405162461bcd60e51b81526004016102e190613ad7565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634183530287876040518363ffffffff1660e01b815260040161307892919061448d565b60408051808303816000875af1158015613096573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130ba91906144bb565b91509150818460000151101580156130d6575080846020015111155b6131365760405162461bcd60e51b815260206004820152602b60248201527f426f6f6b696e672072657175657374206e6f742077697468696e20636f75727460448201526a2074696d652072616e676560a81b60648201526084016102e1565b60005b6002548110156132f25786805190602001206002828154811061315e5761315e613b29565b906000526020600020906009020160030160405161317c9190613f30565b60405180910390201480156131cf57508580519060200120600282815481106131a7576131a7613b29565b90600052602060002090600902016004016040516131c59190613f30565b6040518091039020145b80156132045750845160028054839081106131ec576131ec613b29565b90600052602060002090600902016006016000015410155b801561323b575084602001516002828154811061322357613223613b29565b90600052602060002090600902016006016001015411155b156132e05760006002828154811061325557613255613b29565b600091825260209091206008600990920201015460ff16600481111561327d5761327d613739565b14806132c3575060016002828154811061329957613299613b29565b600091825260209091206008600990920201015460ff1660048111156132c1576132c1613739565b145b156132d45760009350505050610411565b60019350505050610411565b806132ea81613c94565b915050613139565b5060019695505050505050565b6060600061330c8361333f565b9050600a83101561203a578060405160200161332891906144df565b604051602081830303815290604052915050919050565b6060816000036133665750506040805180820190915260018152600360fc1b602082015290565b8160005b8115613390578061337a81613c94565b91506133899050600a8361443d565b915061336a565b60008167ffffffffffffffff8111156133ab576133ab613503565b6040519080825280601f01601f1916602001820160405280156133d5576020820181803683370190505b5090505b8415613440576133ea600183613fa6565b91506133f7600a86614196565b613402906030614508565b60f81b81838151811061341757613417613b29565b60200101906001600160f81b031916908160001a905350613439600a8661443d565b94506133d9565b949350505050565b50805461345490613bf2565b6000825580601f10613464575050565b601f016020900490600052602060002090810190612cc791906134ea565b60405180610100016040528060006001600160a01b0316815260200160008152602001606081526020016060815260200160608152602001606081526020016134de604051806040016040528060008152602001600081525090565b81526020016000905290565b5b808211156134ff57600081556001016134eb565b5090565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561353c5761353c613503565b60405290565b600082601f83011261355357600080fd5b813567ffffffffffffffff8082111561356e5761356e613503565b604051601f8301601f19908116603f0116810190828211818310171561359657613596613503565b816040528381528660208588010111156135af57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156135e457600080fd5b83359250602084013567ffffffffffffffff8082111561360357600080fd5b61360f87838801613542565b9350604086013591508082111561362557600080fd5b5061363286828701613542565b9150509250925092565b60005b8381101561365757818101518382015260200161363f565b50506000910152565b6000815180845261367881602086016020860161363c565b601f01601f19169290920160200192915050565b6020815260006104116020830184613660565b6000602082840312156136b157600080fd5b813567ffffffffffffffff8111156136c857600080fd5b61344084828501613542565b6020815260008251606060208401526136f06080840182613660565b905060208401516040840152604084015160608401528091505092915050565b60006020828403121561372257600080fd5b81356001600160a01b038116811461041157600080fd5b634e487b7160e01b600052602160045260246000fd5b6005811061376d57634e487b7160e01b600052602160045260246000fd5b9052565b80516001600160a01b0316825260006101206020830151602085015260408301518160408601526137a482860182613660565b915050606083015184820360608601526137be8282613660565b915050608083015184820360808601526137d88282613660565b91505060a083015184820360a08601526137f28282613660565b91505060c083015161381160c086018280518252602090810151910152565b5060e083015161203661010086018261374f565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561387a57603f19888603018452613868858351613771565b9450928501929085019060010161384c565b5092979650505050505050565b60006020828403121561389957600080fd5b5035919050565b6020815260006104116020830184613771565b6000806000606084860312156138c857600080fd5b833567ffffffffffffffff8111156138df57600080fd5b6138eb86828701613542565b9660208601359650604090950135949350505050565b6000806040838503121561391457600080fd5b823567ffffffffffffffff8082111561392c57600080fd5b61393886838701613542565b9350602085013591508082111561394e57600080fd5b5061395b85828601613542565b9150509250929050565b602080825282518282018190526000919060409081850190868401855b828110156139af5761399f84835180518252602090810151910152565b9284019290850190600101613982565b5091979650505050505050565b600080600080600085870360c08112156139d557600080fd5b863567ffffffffffffffff808211156139ed57600080fd5b6139f98a838b01613542565b97506020890135915080821115613a0f57600080fd5b613a1b8a838b01613542565b96506040890135915080821115613a3157600080fd5b613a3d8a838b01613542565b95506060890135915080821115613a5357600080fd5b50613a6089828a01613542565b9350506040607f1982011215613a7557600080fd5b50613a7e613519565b6080870135815260a09096013560208701525092959194509290565b60008060408385031215613aad57600080fd5b82359150602083013567ffffffffffffffff811115613acb57600080fd5b61395b85828601613542565b6020808252600d908201526c1058d8d95cdcc819195b9a5959609a1b604082015260600190565b602080825260119082015270109bdbdada5b99c81b9bdd08199bdd5b99607a1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b7f426f6f6b696e672072656a65637465642062792061646d696e3a200000000000815260008251613b7781601b85016020870161363c565b91909101601b0192915050565b85815260a060208201526000613b9d60a0830187613660565b8281036040840152613baf8187613660565b90508281036060840152613bc38186613660565b9150508260808301529695505050505050565b60008251613be881846020870161363c565b9190910192915050565b600181811c90821680613c0657607f821691505b602082108103613c2657634e487b7160e01b600052602260045260246000fd5b50919050565b602080825260169082015275105b9b9bdd5b98d95b595b9d081b9bdd08199bdd5b9960521b604082015260600190565b604081526000613c6f6040830185613660565b90508260208301529392505050565b634e487b7160e01b600052601160045260246000fd5b600060018201613ca657613ca6613c7e565b5060010190565b601f821115613cf757600081815260208120601f850160051c81016020861015613cd45750805b601f850160051c820191505b81811015613cf357828155600101613ce0565b5050505b505050565b815167ffffffffffffffff811115613d1657613d16613503565b613d2a81613d248454613bf2565b84613cad565b602080601f831160018114613d5f5760008415613d475750858301515b600019600386901b1c1916600185901b178555613cf3565b600085815260208120601f198616915b82811015613d8e57888601518255948401946001909101908401613d6f565b5085821015613dac5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b83815260a06020820152600060a082015260c060408201526000613de360c0830185613660565b828103606084015260168152752737ba329030ba3a30b1b432b210313c9030b236b4b760511b60208201526080909201929092526040019392505050565b608081526000613e346080830187613660565b6020830195909552506040810192909252606090910152919050565b606081526000613e636060830186613660565b8281036020840152613e758186613660565b915050826040830152949350505050565b60c081526000613e9960c0830189613660565b60208301979097525060408101949094526060840192909252608083015260a090910152919050565b6020808252601a908201527f466163696c697479206e616d65206e6f742070726f7669646564000000000000604082015260600190565b60208082526017908201527f436f757274206e616d65206e6f742070726f7669646564000000000000000000604082015260600190565b6000808354613f3e81613bf2565b60018281168015613f565760018114613f6b57613f9a565b60ff1984168752821515830287019450613f9a565b8760005260208060002060005b85811015613f915781548a820152908401908201613f78565b50505082870194505b50929695505050505050565b8181038181111561203a5761203a613c7e565b60006101208a8352806020840152613fd38184018b613660565b90508281036040840152613fe7818a613660565b90508281036060840152613ffb8189613660565b9050828103806080850152601882527f426f6f6b696e6720637265617465642062792061646d696e000000000000000060208301526040810160a0850152506140476040820188613660565b905082810360c084015261405b8187613660565b905082810360e084015261406f8186613660565b915050826101008301529998505050505050505050565b84815260a06020820152600061409f60a0830186613660565b82810360408401526140b18186613660565b8381036060850152601a81527f426f6f6b696e6720617070726f7665642062792073797374656d000000000000602082015260809093019390935250604001949350505050565b84815260a06020820152600061411160a0830186613660565b82810360408401526141238186613660565b90508281036060840152602a81527f426f6f6b696e672072656a65637465642062792073797374656d2064756520746020820152696f20636c617368696e6760b01b60408201526060810191505082608083015295945050505050565b634e487b7160e01b600052601260045260246000fd5b6000826141a5576141a5614180565b500690565b600082516141bc81846020870161363c565b6101d160f51b920191825250600201919050565b600083516141e281846020880161363c565b8351908301906141f681836020880161363c565b01949350505050565b84815260a06020820152600061421860a0830186613660565b828103604084015261422a8186613660565b8381036060850152601981527f426f6f6b696e672063616e63656c6c6564206279207573657200000000000000602082015260809093019390935250604001949350505050565b84815260a06020820152600061428a60a0830186613660565b828103604084015261429c8186613660565b90508281036060840152602581527f757064617465642062792073797374656d2028626f6f6b696e6720636f6d706c602082015264657465642960d81b60408201526060810191505082608083015295945050505050565b8481526000602060a0818401526000865461430e81613bf2565b8060a087015260c0600180841660008114614330576001811461434a57614378565b60ff1985168984015283151560051b890183019550614378565b8b6000528660002060005b858110156143705781548b8201860152908301908801614355565b8a0184019650505b5050505050838103604085015261438f8187613660565b8481036060860152601181527064656c657465642062792073797374656d60781b60208201526080909401949094525050604001949350505050565b84815260a0602082015260006143e460a0830186613660565b82810360408401526143f68186613660565b8381036060850152601a81527f49504653204861736820757064617465642062792061646d696e000000000000602082015260809093019390935250604001949350505050565b60008261444c5761444c614180565b500490565b6000835161446381846020880161363c565b601d60f91b908301908152835161448181600184016020880161363c565b01600101949350505050565b6040815260006144a06040830185613660565b82810360208401526144b28185613660565b95945050505050565b600080604083850312156144ce57600080fd5b505080516020909101519092909150565b600360fc1b8152600082516144fb81600185016020870161363c565b9190910160010192915050565b8082018082111561203a5761203a613c7e56fe8b32c25b03448fcbf6f97833a25384fec24ae38a9d0a2e3b7b2a91f2bb6c2860a2646970667358221220d5ad07b20c259775c1c2d7ea78dc10e84a81730ce29b2b16da9cc1ee039d710d64736f6c63430008130033";

    private static String librariesLinkedBinary;

    public static final String FUNC_ADDANNOUNCEMENT = "addAnnouncement";

    public static final String FUNC_ADDUSER = "addUser";

    public static final String FUNC_ATTACHBOOKINGNOTE = "attachBookingNote";

    public static final String FUNC_CANCELBOOKING = "cancelBooking";

    public static final String FUNC_CREATEBOOKING = "createBooking";

    public static final String FUNC_CREATEBOOKING_ = "createBooking_";

    public static final String FUNC_DELETEANNOUNCEMENT = "deleteAnnouncement";

    public static final String FUNC_DELETEUSER = "deleteUser";

    public static final String FUNC_GETALLBOOKINGS = "getAllBookings";

    public static final String FUNC_GETALLBOOKINGS_ = "getAllBookings_";

    public static final String FUNC_GETANNOUNCEMENT = "getAnnouncement";

    public static final String FUNC_GETBOOKEDTIMESLOTS = "getBookedtimeSlots";

    public static final String FUNC_GETBOOKING = "getBooking";

    public static final String FUNC_GETBOOKING_ = "getBooking_";

    public static final String FUNC_REJECTBOOKING = "rejectBooking";

    public static final String FUNC_UPDATEANNOUNCEMENTIPFSHASH = "updateAnnouncementIpfsHash";

    public static final String FUNC_UPDATEANNOUNCEMENTTIME = "updateAnnouncementTime";

    public static final Event ANNOUNCEMENTADDED_EVENT = new Event("announcementAdded", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event ANNOUNCEMENTDELETED_EVENT = new Event("announcementDeleted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event ANNOUNCEMENTIPFSHASHMODIFIED_EVENT = new Event("announcementIpfsHashModified", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event ANNOUNCEMENTREQUESTED_EVENT = new Event("announcementRequested", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event ANNOUNCEMENTTIMEMODIFIED_EVENT = new Event("announcementTimeModified", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event BOOKINGCREATED_EVENT = new Event("bookingCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event BOOKINGDELETED_EVENT = new Event("bookingDeleted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event BOOKINGREQUESTED_EVENT = new Event("bookingRequested", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event BOOKINGUPDATED_EVENT = new Event("bookingUpdated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event TIMESLOTREQUESTED_EVENT = new Event("timeSlotRequested", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event USERADDED_EVENT = new Event("userAdded", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event USERDELETED_EVENT = new Event("userDeleted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
    ;

    @Deprecated
    protected Booking(String contractAddress, Web3j web3j, Credentials credentials,
            BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Booking(String contractAddress, Web3j web3j, Credentials credentials,
            ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Booking(String contractAddress, Web3j web3j, TransactionManager transactionManager,
            BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Booking(String contractAddress, Web3j web3j, TransactionManager transactionManager,
            ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static List<AnnouncementAddedEventResponse> getAnnouncementAddedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(ANNOUNCEMENTADDED_EVENT, transactionReceipt);
        ArrayList<AnnouncementAddedEventResponse> responses = new ArrayList<AnnouncementAddedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            AnnouncementAddedEventResponse typedResponse = new AnnouncementAddedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.ipfsHash = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.startTime = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.endTime = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static AnnouncementAddedEventResponse getAnnouncementAddedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(ANNOUNCEMENTADDED_EVENT, log);
        AnnouncementAddedEventResponse typedResponse = new AnnouncementAddedEventResponse();
        typedResponse.log = log;
        typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.ipfsHash = (String) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.startTime = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
        typedResponse.endTime = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
        typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
        return typedResponse;
    }

    public Flowable<AnnouncementAddedEventResponse> announcementAddedEventFlowable(
            EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getAnnouncementAddedEventFromLog(log));
    }

    public Flowable<AnnouncementAddedEventResponse> announcementAddedEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ANNOUNCEMENTADDED_EVENT));
        return announcementAddedEventFlowable(filter);
    }

    public static List<AnnouncementDeletedEventResponse> getAnnouncementDeletedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(ANNOUNCEMENTDELETED_EVENT, transactionReceipt);
        ArrayList<AnnouncementDeletedEventResponse> responses = new ArrayList<AnnouncementDeletedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            AnnouncementDeletedEventResponse typedResponse = new AnnouncementDeletedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.ipfsHash = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static AnnouncementDeletedEventResponse getAnnouncementDeletedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(ANNOUNCEMENTDELETED_EVENT, log);
        AnnouncementDeletedEventResponse typedResponse = new AnnouncementDeletedEventResponse();
        typedResponse.log = log;
        typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.ipfsHash = (String) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
        return typedResponse;
    }

    public Flowable<AnnouncementDeletedEventResponse> announcementDeletedEventFlowable(
            EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getAnnouncementDeletedEventFromLog(log));
    }

    public Flowable<AnnouncementDeletedEventResponse> announcementDeletedEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ANNOUNCEMENTDELETED_EVENT));
        return announcementDeletedEventFlowable(filter);
    }

    public static List<AnnouncementIpfsHashModifiedEventResponse> getAnnouncementIpfsHashModifiedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(ANNOUNCEMENTIPFSHASHMODIFIED_EVENT, transactionReceipt);
        ArrayList<AnnouncementIpfsHashModifiedEventResponse> responses = new ArrayList<AnnouncementIpfsHashModifiedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            AnnouncementIpfsHashModifiedEventResponse typedResponse = new AnnouncementIpfsHashModifiedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.ipfsHash_ = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.ipfsHash = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static AnnouncementIpfsHashModifiedEventResponse getAnnouncementIpfsHashModifiedEventFromLog(
            Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(ANNOUNCEMENTIPFSHASHMODIFIED_EVENT, log);
        AnnouncementIpfsHashModifiedEventResponse typedResponse = new AnnouncementIpfsHashModifiedEventResponse();
        typedResponse.log = log;
        typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.ipfsHash_ = (String) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.ipfsHash = (String) eventValues.getNonIndexedValues().get(1).getValue();
        typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
        return typedResponse;
    }

    public Flowable<AnnouncementIpfsHashModifiedEventResponse> announcementIpfsHashModifiedEventFlowable(
            EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getAnnouncementIpfsHashModifiedEventFromLog(log));
    }

    public Flowable<AnnouncementIpfsHashModifiedEventResponse> announcementIpfsHashModifiedEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ANNOUNCEMENTIPFSHASHMODIFIED_EVENT));
        return announcementIpfsHashModifiedEventFlowable(filter);
    }

    public static List<AnnouncementRequestedEventResponse> getAnnouncementRequestedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(ANNOUNCEMENTREQUESTED_EVENT, transactionReceipt);
        ArrayList<AnnouncementRequestedEventResponse> responses = new ArrayList<AnnouncementRequestedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            AnnouncementRequestedEventResponse typedResponse = new AnnouncementRequestedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.ipfsHash = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static AnnouncementRequestedEventResponse getAnnouncementRequestedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(ANNOUNCEMENTREQUESTED_EVENT, log);
        AnnouncementRequestedEventResponse typedResponse = new AnnouncementRequestedEventResponse();
        typedResponse.log = log;
        typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.ipfsHash = (String) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
        return typedResponse;
    }

    public Flowable<AnnouncementRequestedEventResponse> announcementRequestedEventFlowable(
            EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getAnnouncementRequestedEventFromLog(log));
    }

    public Flowable<AnnouncementRequestedEventResponse> announcementRequestedEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ANNOUNCEMENTREQUESTED_EVENT));
        return announcementRequestedEventFlowable(filter);
    }

    public static List<AnnouncementTimeModifiedEventResponse> getAnnouncementTimeModifiedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(ANNOUNCEMENTTIMEMODIFIED_EVENT, transactionReceipt);
        ArrayList<AnnouncementTimeModifiedEventResponse> responses = new ArrayList<AnnouncementTimeModifiedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            AnnouncementTimeModifiedEventResponse typedResponse = new AnnouncementTimeModifiedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.ipfsHash = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.startTime_ = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.endTime_ = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.startTime = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.endTime = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static AnnouncementTimeModifiedEventResponse getAnnouncementTimeModifiedEventFromLog(
            Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(ANNOUNCEMENTTIMEMODIFIED_EVENT, log);
        AnnouncementTimeModifiedEventResponse typedResponse = new AnnouncementTimeModifiedEventResponse();
        typedResponse.log = log;
        typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.ipfsHash = (String) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.startTime_ = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
        typedResponse.endTime_ = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
        typedResponse.startTime = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
        typedResponse.endTime = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
        typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
        return typedResponse;
    }

    public Flowable<AnnouncementTimeModifiedEventResponse> announcementTimeModifiedEventFlowable(
            EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getAnnouncementTimeModifiedEventFromLog(log));
    }

    public Flowable<AnnouncementTimeModifiedEventResponse> announcementTimeModifiedEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ANNOUNCEMENTTIMEMODIFIED_EVENT));
        return announcementTimeModifiedEventFlowable(filter);
    }

    public static List<BookingCreatedEventResponse> getBookingCreatedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(BOOKINGCREATED_EVENT, transactionReceipt);
        ArrayList<BookingCreatedEventResponse> responses = new ArrayList<BookingCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            BookingCreatedEventResponse typedResponse = new BookingCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.bookingId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.ipfsHash = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.facilityName = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.courtName = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.note = (String) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse.startTime = (String) eventValues.getNonIndexedValues().get(5).getValue();
            typedResponse.endTime = (String) eventValues.getNonIndexedValues().get(6).getValue();
            typedResponse.status = (String) eventValues.getNonIndexedValues().get(7).getValue();
            typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(8).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static BookingCreatedEventResponse getBookingCreatedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(BOOKINGCREATED_EVENT, log);
        BookingCreatedEventResponse typedResponse = new BookingCreatedEventResponse();
        typedResponse.log = log;
        typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.bookingId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.ipfsHash = (String) eventValues.getNonIndexedValues().get(1).getValue();
        typedResponse.facilityName = (String) eventValues.getNonIndexedValues().get(2).getValue();
        typedResponse.courtName = (String) eventValues.getNonIndexedValues().get(3).getValue();
        typedResponse.note = (String) eventValues.getNonIndexedValues().get(4).getValue();
        typedResponse.startTime = (String) eventValues.getNonIndexedValues().get(5).getValue();
        typedResponse.endTime = (String) eventValues.getNonIndexedValues().get(6).getValue();
        typedResponse.status = (String) eventValues.getNonIndexedValues().get(7).getValue();
        typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(8).getValue();
        return typedResponse;
    }

    public Flowable<BookingCreatedEventResponse> bookingCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getBookingCreatedEventFromLog(log));
    }

    public Flowable<BookingCreatedEventResponse> bookingCreatedEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(BOOKINGCREATED_EVENT));
        return bookingCreatedEventFlowable(filter);
    }

    public static List<BookingDeletedEventResponse> getBookingDeletedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(BOOKINGDELETED_EVENT, transactionReceipt);
        ArrayList<BookingDeletedEventResponse> responses = new ArrayList<BookingDeletedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            BookingDeletedEventResponse typedResponse = new BookingDeletedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.bookingId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.ipfsHash = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.status = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.note = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static BookingDeletedEventResponse getBookingDeletedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(BOOKINGDELETED_EVENT, log);
        BookingDeletedEventResponse typedResponse = new BookingDeletedEventResponse();
        typedResponse.log = log;
        typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.bookingId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.ipfsHash = (String) eventValues.getNonIndexedValues().get(1).getValue();
        typedResponse.status = (String) eventValues.getNonIndexedValues().get(2).getValue();
        typedResponse.note = (String) eventValues.getNonIndexedValues().get(3).getValue();
        typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
        return typedResponse;
    }

    public Flowable<BookingDeletedEventResponse> bookingDeletedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getBookingDeletedEventFromLog(log));
    }

    public Flowable<BookingDeletedEventResponse> bookingDeletedEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(BOOKINGDELETED_EVENT));
        return bookingDeletedEventFlowable(filter);
    }

    public static List<BookingRequestedEventResponse> getBookingRequestedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(BOOKINGREQUESTED_EVENT, transactionReceipt);
        ArrayList<BookingRequestedEventResponse> responses = new ArrayList<BookingRequestedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            BookingRequestedEventResponse typedResponse = new BookingRequestedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.bookingId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static BookingRequestedEventResponse getBookingRequestedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(BOOKINGREQUESTED_EVENT, log);
        BookingRequestedEventResponse typedResponse = new BookingRequestedEventResponse();
        typedResponse.log = log;
        typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.bookingId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
        return typedResponse;
    }

    public Flowable<BookingRequestedEventResponse> bookingRequestedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getBookingRequestedEventFromLog(log));
    }

    public Flowable<BookingRequestedEventResponse> bookingRequestedEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(BOOKINGREQUESTED_EVENT));
        return bookingRequestedEventFlowable(filter);
    }

    public static List<BookingUpdatedEventResponse> getBookingUpdatedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(BOOKINGUPDATED_EVENT, transactionReceipt);
        ArrayList<BookingUpdatedEventResponse> responses = new ArrayList<BookingUpdatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            BookingUpdatedEventResponse typedResponse = new BookingUpdatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.bookingId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.oldData = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.newData = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.note = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static BookingUpdatedEventResponse getBookingUpdatedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(BOOKINGUPDATED_EVENT, log);
        BookingUpdatedEventResponse typedResponse = new BookingUpdatedEventResponse();
        typedResponse.log = log;
        typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.bookingId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.oldData = (String) eventValues.getNonIndexedValues().get(1).getValue();
        typedResponse.newData = (String) eventValues.getNonIndexedValues().get(2).getValue();
        typedResponse.note = (String) eventValues.getNonIndexedValues().get(3).getValue();
        typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
        return typedResponse;
    }

    public Flowable<BookingUpdatedEventResponse> bookingUpdatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getBookingUpdatedEventFromLog(log));
    }

    public Flowable<BookingUpdatedEventResponse> bookingUpdatedEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(BOOKINGUPDATED_EVENT));
        return bookingUpdatedEventFlowable(filter);
    }

    public static List<TimeSlotRequestedEventResponse> getTimeSlotRequestedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(TIMESLOTREQUESTED_EVENT, transactionReceipt);
        ArrayList<TimeSlotRequestedEventResponse> responses = new ArrayList<TimeSlotRequestedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            TimeSlotRequestedEventResponse typedResponse = new TimeSlotRequestedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.facilityName = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.courtName = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static TimeSlotRequestedEventResponse getTimeSlotRequestedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(TIMESLOTREQUESTED_EVENT, log);
        TimeSlotRequestedEventResponse typedResponse = new TimeSlotRequestedEventResponse();
        typedResponse.log = log;
        typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.facilityName = (String) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.courtName = (String) eventValues.getNonIndexedValues().get(1).getValue();
        typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
        return typedResponse;
    }

    public Flowable<TimeSlotRequestedEventResponse> timeSlotRequestedEventFlowable(
            EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getTimeSlotRequestedEventFromLog(log));
    }

    public Flowable<TimeSlotRequestedEventResponse> timeSlotRequestedEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(TIMESLOTREQUESTED_EVENT));
        return timeSlotRequestedEventFlowable(filter);
    }

    public static List<UserAddedEventResponse> getUserAddedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(USERADDED_EVENT, transactionReceipt);
        ArrayList<UserAddedEventResponse> responses = new ArrayList<UserAddedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            UserAddedEventResponse typedResponse = new UserAddedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.user = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static UserAddedEventResponse getUserAddedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(USERADDED_EVENT, log);
        UserAddedEventResponse typedResponse = new UserAddedEventResponse();
        typedResponse.log = log;
        typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.user = (String) eventValues.getIndexedValues().get(1).getValue();
        typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
        return typedResponse;
    }

    public Flowable<UserAddedEventResponse> userAddedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getUserAddedEventFromLog(log));
    }

    public Flowable<UserAddedEventResponse> userAddedEventFlowable(DefaultBlockParameter startBlock,
            DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(USERADDED_EVENT));
        return userAddedEventFlowable(filter);
    }

    public static List<UserDeletedEventResponse> getUserDeletedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(USERDELETED_EVENT, transactionReceipt);
        ArrayList<UserDeletedEventResponse> responses = new ArrayList<UserDeletedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            UserDeletedEventResponse typedResponse = new UserDeletedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.user = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.note = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static UserDeletedEventResponse getUserDeletedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(USERDELETED_EVENT, log);
        UserDeletedEventResponse typedResponse = new UserDeletedEventResponse();
        typedResponse.log = log;
        typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.user = (String) eventValues.getIndexedValues().get(1).getValue();
        typedResponse.note = (String) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
        return typedResponse;
    }

    public Flowable<UserDeletedEventResponse> userDeletedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getUserDeletedEventFromLog(log));
    }

    public Flowable<UserDeletedEventResponse> userDeletedEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(USERDELETED_EVENT));
        return userDeletedEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> addAnnouncement(String ipfsHash,
            BigInteger startTime, BigInteger endTime) {
        final Function function = new Function(
                FUNC_ADDANNOUNCEMENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(ipfsHash), 
                new org.web3j.abi.datatypes.generated.Uint256(startTime), 
                new org.web3j.abi.datatypes.generated.Uint256(endTime)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addUser(String user) {
        final Function function = new Function(
                FUNC_ADDUSER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, user)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> attachBookingNote(BigInteger bookingId,
            String ipfsHash, String note) {
        final Function function = new Function(
                FUNC_ATTACHBOOKINGNOTE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(bookingId), 
                new org.web3j.abi.datatypes.Utf8String(ipfsHash), 
                new org.web3j.abi.datatypes.Utf8String(note)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> cancelBooking(BigInteger bookingId,
            String ipfsHash) {
        final Function function = new Function(
                FUNC_CANCELBOOKING, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(bookingId), 
                new org.web3j.abi.datatypes.Utf8String(ipfsHash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> createBooking(String ipfsHash, String fname,
            String cname, String note, timeSlot time) {
        final Function function = new Function(
                FUNC_CREATEBOOKING, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(ipfsHash), 
                new org.web3j.abi.datatypes.Utf8String(fname), 
                new org.web3j.abi.datatypes.Utf8String(cname), 
                new org.web3j.abi.datatypes.Utf8String(note), 
                time), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> createBooking_(String ipfsHash, String fname,
            String cname, String note, timeSlot time) {
        final Function function = new Function(
                FUNC_CREATEBOOKING_, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(ipfsHash), 
                new org.web3j.abi.datatypes.Utf8String(fname), 
                new org.web3j.abi.datatypes.Utf8String(cname), 
                new org.web3j.abi.datatypes.Utf8String(note), 
                time), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> deleteAnnouncement(String ipfsHash) {
        final Function function = new Function(
                FUNC_DELETEANNOUNCEMENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(ipfsHash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> deleteUser(String user) {
        final Function function = new Function(
                FUNC_DELETEUSER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, user)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> getAllBookings() {
        final Function function = new Function(
                FUNC_GETALLBOOKINGS, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> getAllBookings_() {
        final Function function = new Function(
                FUNC_GETALLBOOKINGS_, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> getAnnouncement(String ipfsHash) {
        final Function function = new Function(
                FUNC_GETANNOUNCEMENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(ipfsHash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> getBookedtimeSlots(String fname, String cname) {
        final Function function = new Function(
                FUNC_GETBOOKEDTIMESLOTS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(fname), 
                new org.web3j.abi.datatypes.Utf8String(cname)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> getBooking(BigInteger bookingId) {
        final Function function = new Function(
                FUNC_GETBOOKING, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(bookingId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> getBooking_(BigInteger bookingId) {
        final Function function = new Function(
                FUNC_GETBOOKING_, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(bookingId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> rejectBooking(BigInteger bookingId,
            String ipfsHash, String reason) {
        final Function function = new Function(
                FUNC_REJECTBOOKING, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(bookingId), 
                new org.web3j.abi.datatypes.Utf8String(ipfsHash), 
                new org.web3j.abi.datatypes.Utf8String(reason)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> updateAnnouncementIpfsHash(String ipfsHash_,
            String ipfsHash) {
        final Function function = new Function(
                FUNC_UPDATEANNOUNCEMENTIPFSHASH, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(ipfsHash_), 
                new org.web3j.abi.datatypes.Utf8String(ipfsHash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> updateAnnouncementTime(String ipfsHash,
            BigInteger startTime, BigInteger endTime) {
        final Function function = new Function(
                FUNC_UPDATEANNOUNCEMENTTIME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(ipfsHash), 
                new org.web3j.abi.datatypes.generated.Uint256(startTime), 
                new org.web3j.abi.datatypes.generated.Uint256(endTime)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static Booking load(String contractAddress, Web3j web3j, Credentials credentials,
            BigInteger gasPrice, BigInteger gasLimit) {
        return new Booking(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Booking load(String contractAddress, Web3j web3j,
            TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Booking(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Booking load(String contractAddress, Web3j web3j, Credentials credentials,
            ContractGasProvider contractGasProvider) {
        return new Booking(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Booking load(String contractAddress, Web3j web3j,
            TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Booking(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Booking> deploy(Web3j web3j, Credentials credentials,
            ContractGasProvider contractGasProvider, String admin, String sfAddress) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, admin), 
                new org.web3j.abi.datatypes.Address(160, sfAddress)));
        return deployRemoteCall(Booking.class, web3j, credentials, contractGasProvider, getDeploymentBinary(), encodedConstructor);
    }

    public static RemoteCall<Booking> deploy(Web3j web3j, TransactionManager transactionManager,
            ContractGasProvider contractGasProvider, String admin, String sfAddress) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, admin), 
                new org.web3j.abi.datatypes.Address(160, sfAddress)));
        return deployRemoteCall(Booking.class, web3j, transactionManager, contractGasProvider, getDeploymentBinary(), encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<Booking> deploy(Web3j web3j, Credentials credentials,
            BigInteger gasPrice, BigInteger gasLimit, String admin, String sfAddress) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, admin), 
                new org.web3j.abi.datatypes.Address(160, sfAddress)));
        return deployRemoteCall(Booking.class, web3j, credentials, gasPrice, gasLimit, getDeploymentBinary(), encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<Booking> deploy(Web3j web3j, TransactionManager transactionManager,
            BigInteger gasPrice, BigInteger gasLimit, String admin, String sfAddress) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, admin), 
                new org.web3j.abi.datatypes.Address(160, sfAddress)));
        return deployRemoteCall(Booking.class, web3j, transactionManager, gasPrice, gasLimit, getDeploymentBinary(), encodedConstructor);
    }

    public static void linkLibraries(List<Contract.LinkReference> references) {
        librariesLinkedBinary = linkBinaryWithReferences(BINARY, references);
    }

    private static String getDeploymentBinary() {
        if (librariesLinkedBinary != null) {
            return librariesLinkedBinary;
        } else {
            return BINARY;
        }
    }

    public static class timeSlot extends StaticStruct {
        public BigInteger startTime;

        public BigInteger endTime;

        public timeSlot(BigInteger startTime, BigInteger endTime) {
            super(new org.web3j.abi.datatypes.generated.Uint256(startTime), 
                    new org.web3j.abi.datatypes.generated.Uint256(endTime));
            this.startTime = startTime;
            this.endTime = endTime;
        }

        public timeSlot(Uint256 startTime, Uint256 endTime) {
            super(startTime, endTime);
            this.startTime = startTime.getValue();
            this.endTime = endTime.getValue();
        }
    }

    public static class Announcement extends DynamicStruct {
        public String ipfsHash;

        public BigInteger startTime;

        public BigInteger endTime;

        public Announcement(String ipfsHash, BigInteger startTime, BigInteger endTime) {
            super(new org.web3j.abi.datatypes.Utf8String(ipfsHash), 
                    new org.web3j.abi.datatypes.generated.Uint256(startTime), 
                    new org.web3j.abi.datatypes.generated.Uint256(endTime));
            this.ipfsHash = ipfsHash;
            this.startTime = startTime;
            this.endTime = endTime;
        }

        public Announcement(Utf8String ipfsHash, Uint256 startTime, Uint256 endTime) {
            super(ipfsHash, startTime, endTime);
            this.ipfsHash = ipfsHash.getValue();
            this.startTime = startTime.getValue();
            this.endTime = endTime.getValue();
        }
    }

    public static class bookingTransaction extends DynamicStruct {
        public String owner;

        public BigInteger bookingId;

        public String ipfsHash;

        public String facilityName;

        public String courtName;

        public String note;

        public timeSlot time;

        public BigInteger status;

        public bookingTransaction(String owner, BigInteger bookingId, String ipfsHash,
                String facilityName, String courtName, String note, timeSlot time,
                BigInteger status) {
            super(new org.web3j.abi.datatypes.Address(160, owner), 
                    new org.web3j.abi.datatypes.generated.Uint256(bookingId), 
                    new org.web3j.abi.datatypes.Utf8String(ipfsHash), 
                    new org.web3j.abi.datatypes.Utf8String(facilityName), 
                    new org.web3j.abi.datatypes.Utf8String(courtName), 
                    new org.web3j.abi.datatypes.Utf8String(note), 
                    time, 
                    new org.web3j.abi.datatypes.generated.Uint8(status));
            this.owner = owner;
            this.bookingId = bookingId;
            this.ipfsHash = ipfsHash;
            this.facilityName = facilityName;
            this.courtName = courtName;
            this.note = note;
            this.time = time;
            this.status = status;
        }

        public bookingTransaction(Address owner, Uint256 bookingId, Utf8String ipfsHash,
                Utf8String facilityName, Utf8String courtName, Utf8String note, timeSlot time,
                Uint8 status) {
            super(owner, bookingId, ipfsHash, facilityName, courtName, note, time, status);
            this.owner = owner.getValue();
            this.bookingId = bookingId.getValue();
            this.ipfsHash = ipfsHash.getValue();
            this.facilityName = facilityName.getValue();
            this.courtName = courtName.getValue();
            this.note = note.getValue();
            this.time = time;
            this.status = status.getValue();
        }
    }

    public static class AnnouncementAddedEventResponse extends BaseEventResponse {
        public String from;

        public String ipfsHash;

        public BigInteger startTime;

        public BigInteger endTime;

        public BigInteger timestamp;
    }

    public static class AnnouncementDeletedEventResponse extends BaseEventResponse {
        public String from;

        public String ipfsHash;

        public BigInteger timestamp;
    }

    public static class AnnouncementIpfsHashModifiedEventResponse extends BaseEventResponse {
        public String from;

        public String ipfsHash_;

        public String ipfsHash;

        public BigInteger timestamp;
    }

    public static class AnnouncementRequestedEventResponse extends BaseEventResponse {
        public String from;

        public String ipfsHash;

        public BigInteger timestamp;
    }

    public static class AnnouncementTimeModifiedEventResponse extends BaseEventResponse {
        public String from;

        public String ipfsHash;

        public BigInteger startTime_;

        public BigInteger endTime_;

        public BigInteger startTime;

        public BigInteger endTime;

        public BigInteger timestamp;
    }

    public static class BookingCreatedEventResponse extends BaseEventResponse {
        public String from;

        public BigInteger bookingId;

        public String ipfsHash;

        public String facilityName;

        public String courtName;

        public String note;

        public String startTime;

        public String endTime;

        public String status;

        public BigInteger timestamp;
    }

    public static class BookingDeletedEventResponse extends BaseEventResponse {
        public String from;

        public BigInteger bookingId;

        public String ipfsHash;

        public String status;

        public String note;

        public BigInteger timestamp;
    }

    public static class BookingRequestedEventResponse extends BaseEventResponse {
        public String from;

        public BigInteger bookingId;

        public BigInteger timestamp;
    }

    public static class BookingUpdatedEventResponse extends BaseEventResponse {
        public String from;

        public BigInteger bookingId;

        public String oldData;

        public String newData;

        public String note;

        public BigInteger timestamp;
    }

    public static class TimeSlotRequestedEventResponse extends BaseEventResponse {
        public String from;

        public String facilityName;

        public String courtName;

        public BigInteger timestamp;
    }

    public static class UserAddedEventResponse extends BaseEventResponse {
        public String from;

        public String user;

        public BigInteger timestamp;
    }

    public static class UserDeletedEventResponse extends BaseEventResponse {
        public String from;

        public String user;

        public String note;

        public BigInteger timestamp;
    }
}
